#!/usr/bin/perl

# autogen_subsetsum_config.pl
#
# This is part of the darwin program.
#
# darwin. A simple genetic algorithm implementation with a
# self-adaptative strategy.
#
# Copyright (C) 2015 Marcos Diez Garc√≠a <marcos.diez.garcia@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Perl script to generate the Subset Sum problem configuration file.

use strict;
use warnings;

# Process the command-line arguments.

my $num_args = $#ARGV + 1;

if ($num_args == 0) {
    print_usage();
    exit 1;
} elsif ($num_args != 3 || $ARGV[1] < 0) {
    print "$0: Bad arguments\n";
    exit 0;
}
sub print_usage
{
    my $usage = <<END_USAGE;
    NAME
    \tautogen_subsetsum_config.pl - darwin's script for the subset sum problem
    \t                              configuration file
    SYNOPSYS
    \tautogen_subsetsum_config.pl <set size> <lower limit> <upper limit>
    DESCRIPTION
    \tautogen_subsetsum_config.pl generates the configuration file for the Subset
    \tSum problem to be loaded afterwards by the program darwin. It consists of a
    \t'target' and a set of <set size> positive integer numbers, all of them
    \tbeing pseudo-randomly generated (using rand()) in the range [<lower limit>,
    \t<upper limit>].
END_USAGE
    print "$usage";
    return;
}

# Set up the random generator.

my $process_id = $$;
srand($process_id);

sub random_int_inclusive
{
    my $lower = $_[0];
    my $upper = $_[1] + 1;

    my $rint = int(rand($upper - $lower)) + $lower;
    return $rint;
}

# Create the output file.

my $file_name = "subsetsum-auto.config";
open(my $fh, '>', $file_name)
    or die "Could not open file '$file_name' $!";

print $fh "# (autogenerated by '$0')\n";
print $fh "# Darwin configuration file\n";
print $fh "# Subset Sum problem\n";
print $fh "# --------------------------------------------------\n";

my $target = random_int_inclusive($ARGV[1], $ARGV[2]);
print $fh "TARGET\n";
print $fh "$target\n";

my $setsize = $ARGV[0];
print $fh "SETSIZE\n";
print $fh "$setsize\n";

print $fh "SET\n";
for (my $n = 0; $n < $setsize; $n += 1) {
    my $s = random_int_inclusive($ARGV[1], $ARGV[2]);
    print $fh "$s\n";
}

close $fh;
exit 1;
